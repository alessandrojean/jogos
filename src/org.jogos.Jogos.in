#!@GJS@ -m

/**
 * This file is the entry point of our application. When executed,
 * it runs in the GJS interpreter.
 */
import GIRepository from 'gi://GIRepository?version=2.0'
import { exit, programArgs } from "system"

/**
 * It should be loading automatically, but for some reason it is not.
 * Had to add so it does the correctly lookup for the typelib files
 * needed to libgda-6.0 to work. Usually libdir points to /app/lib or
 * /app/lib64 depending on the system.
 */
GIRepository.Repository.prepend_search_path('@libdir@/girepository-1.0')
GIRepository.Repository.prepend_library_path('@libdir@')

/**
 * This block sets up important package information. GJS uses this to load
 * our files correctly. At build time, the `@VARIABLE@` strings will be
 * replaced with the information we configure in meson.
 */
imports.package.init({
  name: "@PACKAGE_NAME@",
  version: "@PACKAGE_VERSION@",
  prefix: "@prefix@",
  libdir: "@libdir@",
  datadir: "@datadir@",
});

// Initialize translations and formatting
pkg.initGettext();
pkg.initFormat();

const module = await import("resource://@resource_path@/js/main.js");
const exitCode = await module.main(programArgs);
exit(exitCode);
